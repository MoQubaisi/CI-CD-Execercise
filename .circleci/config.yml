
version: 2.1

commands:
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}

jobs:

  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7} \
                --region us-east-1
  #       - run:
  #           name: Add to inventory
  #           command: |
  #             aws ec2 describe-instances \
  #             --query 'Reservations[*].Instances[*].PublicIpAddress' \
  #             --output text >> inventory
  #             cat inventory
  #       - save_cache:
  #           paths:
  #             - inventory
  #           key: inventory-{{ checksum "inventory" }}
  # 
  # configure_infrastructure: 
  #   docker:
  #     - image: python:3.9
  #   steps:
  #     - checkout
  #     - add_ssh_keys:
  #         fingerprints: ["b0:2e:85:34:a9:2e:b8:10:4a:9c:d0:02:44:f9:18:54"]
  #     - run:
  #         name: Install dependencies
  #         command: pip install ansible
  #     - run:
  #         name: Configure server
  #         command: |
  #           ansible-playbook -i inventory.txt main.yml 

  smoke_test:
    docker:
      - image: alpine:latest
    steps:
      # - run: apk add --update curl
      - run:
          name: smoke test
          command: return 1
      - destroy_environment  

workflows:
  default:
    jobs:
      - create_infrastructure
      - smoke_test:
          requires: [create_infrastructure]
      # - create_infrastructure
      # - configure_infrastructure:
      #     requires: [create_infrastructure]
